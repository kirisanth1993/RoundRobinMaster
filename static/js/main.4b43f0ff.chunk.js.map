{"version":3,"sources":["assets/arjuna.jpg","assets/arjuna1.jpg","assets/charen.jpg","assets/charen1.jpg","assets/commonAvatar.png","assets/dilrukshi.jpg","assets/dilrukshi1.jpg","assets/dinusha.jpg","assets/dinusha1.jpg","assets/dulith.jpg","assets/dulith1.jpg","assets/gayal.jpg","assets/gayal.png","assets/guest.png","assets/guest1.jpg","assets/kavingi.PNG","assets/kavingi.jpg","assets/kavingi1.jpg","assets/kirisanth.jpg","assets/kirisanth1.jpg","assets/malya.jpg","assets/malya1.jpg","assets/psd/arjuna.psd","assets/psd/charen.psd","assets/psd/dilrukshi.psd","assets/psd/dinusha.psd","assets/psd/dulith.psd","assets/psd/gayal.psd","assets/psd/kavingi.psd","assets/psd/kirisanth.psd","assets/psd/malya.psd","assets/psd/shanaka.psd","assets/psd/shemaya.psd","assets/psd/yasasmi.psd","assets/shanaka.jpg","assets/shanaka1.jpg","assets/shemaya.jpg","assets/shemaya1.jpg","assets/yasasmi.jpg","assets/yasasmi1.jpg","components/layout/Header.js","components/sessiionSetUp/GuestAddingModal.js","components/sessiionSetUp/ListSelection.js","components/sessiionSetUp/nameList.js","components/sessiionSetUp/SpeakerOrdering.js","components/launch/Launch.js","components/sessiionSetUp/SetUp.js","components/layout/Body.js","components/layout/Layout.js","App.js","reportWebVitals.js","index.js","assets/tmLogo.png","assets sync /^/.*$"],"names":["Header","props","Grid","className","container","display","height","src","logo","Hidden","xsDown","Typography","GuestAddingModal","isModalOpen","modalCloseAction","guestDataCallback","useState","name","isError","newGuestList","setNewGuestList","Dialog","open","fullWidth","DialogTitle","id","fontSize","onClick","DialogContent","DialogContentText","map","singleGuest","singleGuestIndex","item","lg","md","sm","xs","TextField","size","label","variant","error","value","onChange","e","index","target","nameChangeAction","length","splice","canAdd","push","guestAddAction","DialogActions","Button","canSave","saveGuestAction","ListSelection","speakerList","singleSpeaker","singleSpeakerIndex","isSelected","speakerSelectAction","width","require","imageLink","default","nameList","SpeakerOrdering","orderedList","reOrderCallback","topic","topicChangeAction","launchCallback","type","endIcon","Launch","personList","backToSetupAction","cloneDeep","setSpeakerList","currentSpeakerIndex","setCurrentSpeakerIndex","isImgSlider","setIsImgSlider","useEffect","url","setTimeout","justifyContent","console","log","window","screen","images","showBullets","showNavs","style","position","navSize","loop","startIndex","onStartSlide","slice","SetUp","isGuestModalOpen","setIsGuestModalOpen","selectedTimer","setSelectedTimer","selectedTimerObj","setSelectedTimerObj","timerOptions","setTimerOptions","selectedRoundRobin","setSelectedRoundRobin","selectedRoundRobinObj","setSelectedRoundRobinObj","roundRobinOptions","setRoundRobinOptions","searchKey","setSearchKey","isSpeakerOrderModalOpen","setIsSpeakerOrderModalOpen","todaysTopic","setTodaysTopic","arrangedList","setArrangedList","isLaunchPage","setIsLaunchPage","filteredSpeakerList","setFilteredSpeakerList","searchAction","searchValue","filter","singlePerson","toLowerCase","includes","timerList","orderGenerateAction","randomOrderedList","sort","Math","random","unshift","list","newGuestEnterAction","Box","Autocomplete","event","newValue","options","getOptionLabel","option","getOptionDisabled","isDisabled","getOptionSelected","a","margin","placeholder","renderInput","params","clickedSpeaker","Body","path","exact","component","Layout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.4b43f0ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arjuna.785704a7.jpg\";","export default __webpack_public_path__ + \"static/media/arjuna1.92cf7754.jpg\";","export default __webpack_public_path__ + \"static/media/charen.1afd196a.jpg\";","export default __webpack_public_path__ + \"static/media/charen1.ade18ecf.jpg\";","export default __webpack_public_path__ + \"static/media/commonAvatar.bcfaecf2.png\";","export default __webpack_public_path__ + \"static/media/dilrukshi.1fc60a01.jpg\";","export default __webpack_public_path__ + \"static/media/dilrukshi1.5287891a.jpg\";","export default __webpack_public_path__ + \"static/media/dinusha.02f6b40e.jpg\";","export default __webpack_public_path__ + \"static/media/dinusha1.355de4d0.jpg\";","export default __webpack_public_path__ + \"static/media/dulith.8324a458.jpg\";","export default __webpack_public_path__ + \"static/media/dulith1.7d445333.jpg\";","export default __webpack_public_path__ + \"static/media/gayal.6c75801f.jpg\";","export default __webpack_public_path__ + \"static/media/gayal.e4374c5f.png\";","export default __webpack_public_path__ + \"static/media/guest.f5d301de.png\";","export default __webpack_public_path__ + \"static/media/guest1.00d08fb7.jpg\";","export default __webpack_public_path__ + \"static/media/kavingi.e6bd34f8.PNG\";","export default __webpack_public_path__ + \"static/media/kavingi.5964fdbd.jpg\";","export default __webpack_public_path__ + \"static/media/kavingi1.01d4c24a.jpg\";","export default __webpack_public_path__ + \"static/media/kirisanth.65215827.jpg\";","export default __webpack_public_path__ + \"static/media/kirisanth1.f983292f.jpg\";","export default __webpack_public_path__ + \"static/media/malya.55b50486.jpg\";","export default __webpack_public_path__ + \"static/media/malya1.bf54a2f5.jpg\";","export default __webpack_public_path__ + \"static/media/arjuna.bb4d3a0a.psd\";","export default __webpack_public_path__ + \"static/media/charen.3c8fd484.psd\";","export default __webpack_public_path__ + \"static/media/dilrukshi.005916dd.psd\";","export default __webpack_public_path__ + \"static/media/dinusha.6f71a731.psd\";","export default __webpack_public_path__ + \"static/media/dulith.b107f7fa.psd\";","export default __webpack_public_path__ + \"static/media/gayal.86d8d60c.psd\";","export default __webpack_public_path__ + \"static/media/kavingi.39caa7ba.psd\";","export default __webpack_public_path__ + \"static/media/kirisanth.e3992b63.psd\";","export default __webpack_public_path__ + \"static/media/malya.fb3426fe.psd\";","export default __webpack_public_path__ + \"static/media/shanaka.8985ec1e.psd\";","export default __webpack_public_path__ + \"static/media/shemaya.750f30ea.psd\";","export default __webpack_public_path__ + \"static/media/yasasmi.9cf20fe0.psd\";","export default __webpack_public_path__ + \"static/media/shanaka.2ae0e583.jpg\";","export default __webpack_public_path__ + \"static/media/shanaka1.269cd424.jpg\";","export default __webpack_public_path__ + \"static/media/shemaya.b581df66.jpg\";","export default __webpack_public_path__ + \"static/media/shemaya1.4456b9b3.jpg\";","export default __webpack_public_path__ + \"static/media/yasasmi.f64625e7.jpg\";","export default __webpack_public_path__ + \"static/media/yasasmi1.601d6a5b.jpg\";","import React from 'react';\r\nimport \"./Layout.scss\";\r\n\r\nimport { Grid, Typography, Hidden } from '@material-ui/core';\r\nimport logo from \"../../assets/tmLogo.png\"; \r\n\r\nexport default function Header(props){\r\n    return(\r\n        <Grid className=\"headerContainer\">\r\n            <Grid container display=\"flex\" className=\"logoAndName\">\r\n                <img className=\"logo-image\" height={70} src={logo}/>\r\n                <Hidden xsDown><Typography >CIPM TOASTMASTERS CLUB</Typography></Hidden>\r\n            </Grid>\r\n        </Grid>\r\n        \r\n    );\r\n}  ","import React, { useState } from 'react';\r\nimport { Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Typography, Hidden  } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function GuestAddingModal(props){\r\n    const { isModalOpen, modalCloseAction, guestDataCallback } = props;\r\n\r\n    const [ newGuestList, setNewGuestList ] = useState([{\r\n        name: \"\",\r\n        isError: false   \r\n    }]);\r\n\r\n    const guestAddAction = (e, index) => {\r\n        let canAdd = true;\r\n        newGuestList.map((singleGuest) => {\r\n            if(!singleGuest.name){\r\n                singleGuest.isError = true;\r\n                canAdd = false;\r\n            }\r\n        });\r\n\r\n        if(canAdd){\r\n            newGuestList.push({\r\n                name: \"\",\r\n                isError: false\r\n            });\r\n        }\r\n        setNewGuestList([...newGuestList]);\r\n    };\r\n\r\n    const guestDeleteAction = (e, index)  => {\r\n        newGuestList.splice(index,1);\r\n        setNewGuestList([...newGuestList]);\r\n    };\r\n\r\n    const nameChangeAction = (e, index)  => {\r\n        newGuestList[index].name = e.target.value;\r\n        newGuestList[index].isError = false;\r\n        setNewGuestList([...newGuestList]);\r\n    };\r\n\r\n    const saveGuestAction = () => {\r\n        let canSave = true;\r\n        newGuestList.map((singleGuest) => {\r\n            if(!singleGuest.name){\r\n                singleGuest.isError = true;\r\n                canSave = false;\r\n            }\r\n        });\r\n\r\n        if(canSave){\r\n            guestDataCallback(newGuestList);\r\n            modalCloseAction();\r\n        }\r\n        setNewGuestList([...newGuestList]);\r\n    };\r\n\r\n    return(\r\n        <Dialog\r\n            className=\"modalMainContainer\"\r\n            open={ isModalOpen }\r\n            // onClose={ () => { modalCloseAction(); } }\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\" className=\"modalHeader\">\r\n                Add Today's Guests Here\r\n                <CancelIcon \r\n                    className=\"cancelIcon\" \r\n                    fontSize=\"large\"\r\n                    onClick={ () => { modalCloseAction(false); } }\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent className=\"modalContext\">\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {\r\n                        newGuestList.map((singleGuest, singleGuestIndex) => { \r\n                            return(\r\n                                <Grid container className=\"singleFieldBlock\" fullWidth>\r\n                                    <Hidden xsDown>\r\n                                        <Grid item lg={1} md={1} sm={1} xs={1}>\r\n                                            <h3>{ singleGuestIndex + 1 }</h3>\r\n                                        </Grid>\r\n                                    </Hidden>\r\n                                    <Grid item lg={8} md={8} sm={8} xs={8}>\r\n                                    <TextField \r\n                                        fullWidth\r\n                                        id=\"outlined-basic\" \r\n                                        size=\"small\"\r\n                                        label={\"Guest \" + (singleGuestIndex+1)} \r\n                                        className=\"nameTextBox\"\r\n                                        variant=\"outlined\"\r\n                                        error={ singleGuest.isError }\r\n                                        value={ singleGuest.name }\r\n                                        onChange={ (e) => { nameChangeAction(e, singleGuestIndex) } }\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid item lg={3} md={3} sm={3} xs={4}>\r\n                                        <Grid item>\r\n                                        {\r\n                                            newGuestList.length > 1 &&\r\n                                            <DeleteIcon\r\n                                                fontSize=\"large\"\r\n                                                className=\"actionIcon\"\r\n                                                onClick={ (e) => { guestDeleteAction(e, singleGuestIndex) } }\r\n                                            />\r\n                                        }\r\n                                        {\r\n                                            (singleGuestIndex === (newGuestList.length - 1)) &&\r\n                                            <AddCircleOutlineIcon\r\n                                                fontSize=\"large\"\r\n                                                className=\"actionIcon\"\r\n                                                onClick={ (e) => { guestAddAction(e, singleGuestIndex) } }\r\n                                            />\r\n                                        }\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    className=\"guessAddBtn\" \r\n                    size=\"large\"\r\n                    onClick={ () => { saveGuestAction(); } }\r\n                >\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        \r\n    );\r\n}  ","import React, {useEffect, useState} from 'react';\r\nimport \"./SetUp.scss\";\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nexport default function ListSelection(props){\r\n    return(\r\n        <Grid className=\"listSelectionContainer\" container>\r\n            {\r\n                props.speakerList.map((singleSpeaker, singleSpeakerIndex) => {\r\n                    return(\r\n                        <Grid item md={4} lg={4} sm={12} className=\"outSingleUserBlock\" container>\r\n                            <Grid \r\n                                className={ \"singleUserBlock \" + (singleSpeaker.isSelected ? \"selectedSingleUserBlock\" : \"\") } \r\n                                container\r\n                                onClick={ () => { props.speakerSelectAction(singleSpeakerIndex, singleSpeaker); } }\r\n                                >\r\n                                <Grid item md={3} lg={3} sm={3}>\r\n                                    <img \r\n                                        height={50} \r\n                                        width={50} \r\n                                        src={ require(`../../assets/${singleSpeaker.imageLink}`).default }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item md={9} lg={9} sm={9}>\r\n                                    <h2>{ singleSpeaker.name }</h2>\r\n                                </Grid>\r\n                                {/* <Grid item md={2} lg={2} sm={3}>\r\n                                    <h2>{ singleSpeakerIndex + 1 }</h2>\r\n                                </Grid> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                    );\r\n                })\r\n            }\r\n        </Grid>\r\n    );\r\n}  ","export const nameList = [\r\n    {\r\n        name: \"DTM Dilrukshi\",\r\n        imageLink: \"dilrukshi1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Dinusha\",\r\n        imageLink: \"dinusha1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Kavingi\",\r\n        imageLink: \"kavingi1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Malya\",\r\n        imageLink: \"malya1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Yasasmi\",\r\n        imageLink: \"yasasmi1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Gayal\",\r\n        imageLink: \"gayal.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Shanaka\",\r\n        imageLink: \"shanaka1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Dulith\",\r\n        imageLink: \"dulith1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Charen\",\r\n        imageLink: \"charen1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"DTM Arjuna\",\r\n        imageLink: \"arjuna1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Kirisanth\",\r\n        imageLink: \"kirisanth1.jpg\",\r\n        isSelected: false\r\n    },\r\n    {\r\n        name: \"TM Shemaya\",\r\n        imageLink: \"shemaya1.jpg\",\r\n        isSelected: false\r\n    },\r\n];","import React, { useState } from 'react';\r\nimport { Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Typography  } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\nexport default function SpeakerOrdering(props){\r\n    const { \r\n        isModalOpen, \r\n        modalCloseAction, \r\n        orderedList,\r\n        reOrderCallback,\r\n        topic,\r\n        topicChangeAction,\r\n        launchCallback\r\n    } = props;\r\n\r\n    return(\r\n        <Dialog\r\n            className=\"modalMainContainer\"\r\n            open={ isModalOpen }\r\n            // onClose={ () => { modalCloseAction(); } }\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\" className=\"modalHeader\">\r\n                Speaker Order\r\n                <CancelIcon \r\n                    className=\"cancelIcon\" \r\n                    fontSize=\"large\"\r\n                    onClick={ () => { modalCloseAction(false); } }\r\n                />\r\n            </DialogTitle>\r\n            <DialogContent className=\"modalContext\">\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <TextField \r\n                        className=\"topicField\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        value={ topic }\r\n                        onChange={ (e) => { topicChangeAction(e.target.value); } }\r\n                        id=\"outlined-basic\" \r\n                        label=\"Enter Today's Topic\" \r\n                        variant=\"outlined\"\r\n                    />\r\n                    {\r\n                        orderedList.map((singleSpeaker, singleSpeakerIndex) => { \r\n                            return(\r\n                                <Grid container className=\"singleSpeakerBlock\" fullWidth>\r\n                                    <Grid item lg={1} md={1} sm={1} xs={1}>\r\n                                        <h3>{ singleSpeakerIndex + 1 }</h3>\r\n                                    </Grid>\r\n                                    <Grid item lg={10} md={10} sm={10} xs={10}>\r\n                                        <h3>{ singleSpeaker.name + (singleSpeaker.type ? (\" - \" + singleSpeaker.type) : \"\") }</h3>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    className=\"cancelBtn\" \r\n                    size=\"large\"\r\n                    onClick={ () => { reOrderCallback(); } }\r\n                    endIcon={<ReplayIcon/>} \r\n\r\n                >\r\n                    ReOrder\r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    className=\"guessAddBtn launchBtn\" \r\n                    size=\"large\"\r\n                    onClick={ () => { launchCallback(); } }\r\n                    endIcon={<PlayArrowIcon/>} \r\n                >\r\n                    Launch\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n        \r\n    );\r\n}  ","\r\nimport React, { useEffect, useState } from 'react';\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport { Grid, Typography, Button, TextField, Box, Hidden } from '@material-ui/core';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport \"./Launch.scss\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst Launch = (props) => {\r\n    const{ personList, topic, backToSetupAction } = props;\r\n    const[speakerList, setSpeakerList] = useState(cloneDeep(personList));\r\n    const[currentSpeakerIndex, setCurrentSpeakerIndex] = useState(0);\r\n    const[isImgSlider, setIsImgSlider] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setSpeakerList(personList.map((singleSpeaker) => {\r\n            return {\r\n                ...singleSpeaker,\r\n                url: require(\"../../assets/\" + singleSpeaker.imageLink).default\r\n            }\r\n        }));\r\n        setTimeout(() => {\r\n            setIsImgSlider(true);\r\n        },500);\r\n    },[personList]);\r\n\r\n    return (\r\n        <Grid className=\"launchContainer\">\r\n            <Grid container>\r\n                <Grid container lg={10} md={10} sm={10} xs={10} className=\"launchTopic\">\r\n                    <h2 className=\"heading\">Topic - {topic}</h2>\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} display=\"flex\" container justifyContent=\"flex-end\" className=\"btnWrap\">\r\n                    <Button \r\n                        fullWidth \r\n                        size=\"large\"\r\n                        className=\"setupBtn\" \r\n                        variant=\"contained\" \r\n                        endIcon={<SettingsIcon/>} \r\n                        onClick={ () => { backToSetupAction() } }\r\n                        >\r\n                        <Hidden xsDown>Back to Setup</Hidden>\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container display=\"flex\" justifyContent=\"space-between\">\r\n                <Grid item md={5} lg={5} sm={5} xs={12}>\r\n                    {console.log(\"window.screen.height\", window.screen.height)}\r\n                    {\r\n                        isImgSlider &&\r\n                        <SimpleImageSlider\r\n                            width={ \"100%\" }\r\n                            // height={490}\r\n                            // height={window.screen.height < 1080 ? 490 : 690}\r\n                            height={490}\r\n                            images={speakerList}\r\n                            showBullets={true}\r\n                            showNavs={true}\r\n                            style={{position: \"relative\"}}\r\n                            navSize={ 80 }\r\n                            loop={ false }\r\n                            startIndex={0}\r\n                            onStartSlide={ (index) => { setCurrentSpeakerIndex(index - 1) } }\r\n                        />\r\n                    }\r\n                    <Grid container display=\"flex\" justifyContent=\"center\">\r\n                        {\r\n                            speakerList[currentSpeakerIndex] &&\r\n                            <h2 className=\"speakerName\">\r\n                                {speakerList[currentSpeakerIndex].name + (speakerList[currentSpeakerIndex].type ? (\" - \" + speakerList[currentSpeakerIndex].type) : \"\")}\r\n                            </h2>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={4} lg={4} sm={4} xs={12} className=\"nameListBlock\">\r\n                    {\r\n                        speakerList.slice(currentSpeakerIndex, speakerList.length).map((singleSpeaker, singleSpeakerIndex) => (\r\n                            <Grid container className={ (singleSpeakerIndex === 0) ? \"currentName\" : \"\"}>\r\n                                <Grid md={2} lg={2} sm={2}>\r\n                                    <h3>{ currentSpeakerIndex + 1 + singleSpeakerIndex }</h3>\r\n                                </Grid>\r\n                                <Grid md={10} lg={10} sm={10}>\r\n                                    <h3>{ singleSpeaker.name + (singleSpeaker.type ? (\" - \" + singleSpeaker.type) : \"\") }</h3>\r\n                                </Grid>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Launch;","import React, {useEffect, useState} from 'react';\r\nimport \"./SetUp.scss\";\r\n\r\nimport { Grid, Button, TextField, Box } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\n\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport GuestAddingModal from './GuestAddingModal';\r\nimport ListSelection from './ListSelection';\r\nimport { nameList } from './nameList';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport SpeakerOrdering from './SpeakerOrdering';\r\nimport GamesIcon from '@material-ui/icons/Games';\r\nimport Launch from '../launch/Launch';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nexport default function SetUp(props){\r\n    const [isGuestModalOpen, setIsGuestModalOpen] = useState(false);\r\n    const [newGuestList, setNewGuestList] = useState([]);\r\n    const [selectedTimer, setSelectedTimer] = useState();\r\n    const [selectedTimerObj, setSelectedTimerObj] = useState();\r\n    const [timerOptions, setTimerOptions] = useState([]);\r\n    const [selectedRoundRobin, setSelectedRoundRobin] = useState();\r\n    const [selectedRoundRobinObj, setSelectedRoundRobinObj] = useState();\r\n    const [roundRobinOptions, setRoundRobinOptions] = useState([]);\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n    const [isSpeakerOrderModalOpen, setIsSpeakerOrderModalOpen] = useState(false);\r\n    const [todaysTopic, setTodaysTopic] = useState(\"\");\r\n    const [arrangedList, setArrangedList] = useState([]);\r\n    const [isLaunchPage, setIsLaunchPage] = useState(false);\r\n    \r\n    const [speakerList, setSpeakerList] = useState(cloneDeep(nameList));\r\n    const [filteredSpeakerList, setFilteredSpeakerList] = useState(cloneDeep(nameList));\r\n\r\n    useEffect(() => {\r\n        newGuestList.map((singleGuest) => {\r\n            speakerList.push({\r\n                name: \"Guest \" + singleGuest.name,\r\n                imageLink: \"guest.png\",\r\n                isSelected: true\r\n            });\r\n            filteredSpeakerList.push({\r\n                name: \"Guest \" + singleGuest.name,\r\n                imageLink: \"guest1.png\",\r\n                isSelected: true\r\n            });\r\n        });\r\n        setSpeakerList([...speakerList]);\r\n        setFilteredSpeakerList([...filteredSpeakerList]);\r\n        searchAction(searchKey);\r\n    },[newGuestList]);\r\n\r\n    const searchAction = ((searchValue) => {\r\n        setSearchKey(searchValue);\r\n        setFilteredSpeakerList([...speakerList.filter((singlePerson) => {\r\n            return(\r\n                singlePerson.name.toLowerCase().includes(searchValue.toLowerCase()) &&\r\n                singlePerson.name !== selectedTimer && singlePerson.name !== selectedRoundRobin\r\n            );\r\n        })]);\r\n    });\r\n\r\n    useEffect(() => {\r\n        let timerList = nameList.filter((singlePerson) => {\r\n            return(singlePerson.name !== selectedRoundRobin);\r\n        });\r\n        setTimerOptions([...timerList]);\r\n        searchAction(searchKey);\r\n    },[selectedRoundRobin]);\r\n\r\n    useEffect(() => {\r\n        let timerList = nameList.filter((singlePerson) => {\r\n            return((singlePerson.name !== selectedTimer));\r\n        });\r\n        setRoundRobinOptions([...timerList]);\r\n        searchAction(searchKey);\r\n    },[selectedTimer]);\r\n\r\n    const newGuestEnterAction = (list) => {\r\n        setNewGuestList([...list]);\r\n    }\r\n\r\n    const speakerSelectAction = (index, clickedSpeaker) => {\r\n        speakerList.map((singleSpeaker) => {\r\n            if(singleSpeaker.name === clickedSpeaker.name){\r\n                singleSpeaker.isSelected = !singleSpeaker.isSelected;\r\n            }\r\n        });\r\n\r\n        setSpeakerList([...speakerList]);\r\n        // setFilteredSpeakerList([...filteredSpeakerList]);\r\n    }\r\n\r\n    const orderGenerateAction = (() => {\r\n        let pureSpeakerList = speakerList.filter((singlePerson) => {\r\n            return(singlePerson.isSelected && (singlePerson.name !== selectedTimer) && (singlePerson.name !== selectedRoundRobin));\r\n        });\r\n        let randomOrderedList = pureSpeakerList.sort(() => Math.random() - 0.5);\r\n        if(selectedRoundRobin){\r\n            selectedRoundRobinObj[\"type\"]=\"RR Master\";\r\n            randomOrderedList.unshift(selectedRoundRobinObj);\r\n        }\r\n        if(selectedTimer){\r\n            selectedTimerObj[\"type\"]=\"Timer\";\r\n            randomOrderedList.push(selectedTimerObj);\r\n        }\r\n        setArrangedList([...randomOrderedList]);   \r\n        setIsSpeakerOrderModalOpen(true);     \r\n    })\r\n\r\n    const launchAction = () => {\r\n        setIsSpeakerOrderModalOpen(false);\r\n        setIsLaunchPage(true);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                !isLaunchPage &&\r\n                <Grid className=\"setupContainer\">\r\n                    {\r\n                        isGuestModalOpen &&\r\n                        <GuestAddingModal\r\n                            isModalOpen= { isGuestModalOpen }\r\n                            modalCloseAction = { () => { setIsGuestModalOpen(false) } }\r\n                            guestDataCallback= { (list) => { newGuestEnterAction(list) } }\r\n                        />\r\n                    }\r\n                    {\r\n                        isSpeakerOrderModalOpen &&\r\n                        <SpeakerOrdering\r\n                            isModalOpen= { isSpeakerOrderModalOpen }\r\n                            modalCloseAction = { () => { setIsSpeakerOrderModalOpen(false) } }\r\n                            orderedList={ arrangedList }\r\n                            reOrderCallback= { () => { orderGenerateAction() } }\r\n                            topic={ todaysTopic }\r\n                            topicChangeAction={ (topic) => {setTodaysTopic(topic)} }\r\n                            launchCallback={ () => { launchAction(); } }\r\n                        />\r\n                    }\r\n                    <Grid container display=\"flex\" justifyContent=\"space-between\">\r\n                        <Grid item lg={3} md={3} sm={6} xs={12} className=\"searchMainContainer\">\r\n                            <Box className=\"searchIcon\"><SearchIcon height={30} /></Box>\r\n                            <TextField \r\n                                className=\"searchInput\"\r\n                                fullWidth\r\n                                value={ searchKey }\r\n                                onChange={ (e) => { searchAction(e.target.value); } }\r\n                                id=\"outlined-basic\" \r\n                                label=\"Search TM\" \r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"parentAutoComplete\" lg={3} md={3} sm={6} xs={12}>\r\n                            <Box className=\"innerIcon\"><PersonIcon height={30} /></Box>\r\n                            <Autocomplete\r\n                                className=\"autoFillInput\"\r\n                                id='searchSelection'\r\n                                name='searchSelection'\r\n                                value={selectedRoundRobinObj}\r\n                                onChange={(event,newValue)=>{\r\n                                    if(!newValue){\r\n                                        setSelectedRoundRobin(null);\r\n                                        setSelectedRoundRobinObj(null);\r\n                                    }else{\r\n                                        setSelectedRoundRobin(newValue.name);\r\n                                        setSelectedRoundRobinObj(newValue);\r\n                                    }\r\n                                }}\r\n                                options={roundRobinOptions}\r\n                                getOptionLabel={(option)=>option[\"name\"]?option[\"name\"]:\"\"}\r\n                                getOptionDisabled={(option)=>option.isDisabled?true:false}\r\n                                getOptionSelected={async (option,value)=>option && value && option.id===value.id }\r\n                                margin={\"none\"}\r\n                                placeholder={ \"Round Robin Master\" }\r\n                                fullWidth\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        margin=\"none\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder={ \"Round Robin Master\" }\r\n                                    />\r\n                                )}\r\n                                // loading={isClinicsLoading}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className=\"parentAutoComplete\" lg={3} md={3} sm={6} xs={12}>\r\n                            <Box className=\"innerIcon\"><AccessAlarmIcon height={30} /></Box>\r\n                            <Autocomplete\r\n                                className=\"autoFillInput\"\r\n                                id='searchSelection'\r\n                                name='searchSelection'\r\n                                value={selectedTimerObj}\r\n                                onChange={(event,newValue)=>{\r\n                                    if(!newValue){\r\n                                        setSelectedTimer(null);\r\n                                        setSelectedTimerObj(null);\r\n                                    }else{\r\n                                        setSelectedTimer(newValue.name);\r\n                                        setSelectedTimerObj(newValue);\r\n                                    }\r\n                                }}\r\n                                options={timerOptions}\r\n                                getOptionLabel={(option)=>option[\"name\"]?option[\"name\"]:\"\"}\r\n                                getOptionDisabled={(option)=>option.isDisabled?true:false}\r\n                                getOptionSelected={async (option,value)=>option && value && option.id===value.id }\r\n                                margin={\"none\"}\r\n                                placeholder={ \"Timer\" }\r\n                                fullWidth\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        margin=\"none\"\r\n                                        variant=\"outlined\"\r\n                                        placeholder={ \"Timer\" }\r\n                                    />\r\n                                )}\r\n                                // loading={isClinicsLoading}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={3} md={3} sm={6} xs={12} className=\"addAndGenerateBtn\" container justifyContent=\"space-around\">\r\n                            <Grid item lg={5} md={5} sm={5} xs={5} container justifyContent=\"center\">\r\n                                <Button \r\n                                    fullWidth \r\n                                    size=\"large\"\r\n                                    className=\"cancelBtn\" \r\n                                    variant=\"contained\" \r\n                                    endIcon={<PersonAddIcon/>} \r\n                                    onClick={ (e) => { setIsGuestModalOpen(true) } }\r\n                                    >\r\n                                    <Hidden xsDown>Guests</Hidden>\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item lg={5} md={5} sm={5} xs={5} container justifyContent=\"center\">\r\n                                <Button \r\n                                    fullWidth \r\n                                    size=\"large\"\r\n                                    className=\"guessAddBtn\" \r\n                                    variant=\"contained\" \r\n                                    endIcon={<GamesIcon/>} \r\n                                    onClick={ (e) => { orderGenerateAction() } }\r\n                                    >\r\n                                    <Hidden xsDown>Generate</Hidden>\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid className=\"listView\">\r\n                        <ListSelection\r\n                            speakerList={ filteredSpeakerList }\r\n                            speakerSelectAction={ (index, clickedSpeaker) => { speakerSelectAction(index, clickedSpeaker) } }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n            {\r\n                isLaunchPage && (arrangedList.length > 0) &&\r\n                <Launch\r\n                    personList={ arrangedList }\r\n                    topic={ todaysTopic }\r\n                    backToSetupAction= { () => { setIsLaunchPage(false) } }\r\n                />\r\n            }\r\n        </>\r\n    );\r\n}  ","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SetUp from \"../sessiionSetUp/SetUp\";\r\n\r\nexport default function Body(props){\r\n    return(\r\n        <Grid className=\"body-container\">\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/RoundRobinMaster\" exact component={SetUp}/>\r\n                </Switch>\r\n            </Router>\r\n        </Grid>\r\n    );\r\n}  ","import React from 'react';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nexport default function Layout(props){\r\n    return(\r\n        <>\r\n            <Header/>\r\n            <Body/>\r\n        </>\r\n    );\r\n}  ","import './App.scss';\r\nimport Layout from './components/layout/Layout';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nfunction App() {\r\n  return (\r\n    <Grid className=\"main-container\">\r\n      <Layout/>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/tmLogo.ec057b94.png\";","var map = {\n\t\"./arjuna.jpg\": 159,\n\t\"./arjuna1.jpg\": 160,\n\t\"./charen.jpg\": 161,\n\t\"./charen1.jpg\": 162,\n\t\"./commonAvatar.png\": 163,\n\t\"./dilrukshi.jpg\": 164,\n\t\"./dilrukshi1.jpg\": 165,\n\t\"./dinusha.jpg\": 166,\n\t\"./dinusha1.jpg\": 167,\n\t\"./dulith.jpg\": 168,\n\t\"./dulith1.jpg\": 169,\n\t\"./gayal.jpg\": 170,\n\t\"./gayal.png\": 171,\n\t\"./guest.png\": 172,\n\t\"./guest1.jpg\": 173,\n\t\"./kavingi.PNG\": 174,\n\t\"./kavingi.jpg\": 175,\n\t\"./kavingi1.jpg\": 176,\n\t\"./kirisanth.jpg\": 177,\n\t\"./kirisanth1.jpg\": 178,\n\t\"./malya.jpg\": 179,\n\t\"./malya1.jpg\": 180,\n\t\"./psd/arjuna.psd\": 181,\n\t\"./psd/charen.psd\": 182,\n\t\"./psd/dilrukshi.psd\": 183,\n\t\"./psd/dinusha.psd\": 184,\n\t\"./psd/dulith.psd\": 185,\n\t\"./psd/gayal.psd\": 186,\n\t\"./psd/kavingi.psd\": 187,\n\t\"./psd/kirisanth.psd\": 188,\n\t\"./psd/malya.psd\": 189,\n\t\"./psd/shanaka.psd\": 190,\n\t\"./psd/shemaya.psd\": 191,\n\t\"./psd/yasasmi.psd\": 192,\n\t\"./shanaka.jpg\": 193,\n\t\"./shanaka1.jpg\": 194,\n\t\"./shemaya.jpg\": 195,\n\t\"./shemaya1.jpg\": 196,\n\t\"./tmLogo.png\": 89,\n\t\"./yasasmi.jpg\": 197,\n\t\"./yasasmi1.jpg\": 198\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 99;"],"sourceRoot":""}